import torch
import numpy as np
import math
import torch.nn as nn

def sigmoid(x):
    return 1 / (1 + math.exp(-x))

m = nn.Sigmoid()

a = torch.tensor([[[1342.1769,  505.5948],
         [1328.3367,  499.0428],
         [1355.6669,  516.5823],
         [1338.3794,  508.0079],
         [1320.1854,  498.4877],
         [1305.8052,  487.1740]],
        [[1342.6229,  505.9592],
         [1329.9672,  500.3081],
         [1355.0853,  517.0928],
         [1340.1302,  509.3122],
         [1321.8317,  499.7883],
         [1307.5060,  488.4833]],
        [[1343.0911,  506.2680],
         [1331.6893,  501.6611],
         [1354.7478,  517.9299],
         [1341.9526,  510.7628],
         [1323.6548,  501.2709],
         [1309.3381,  489.9645]],
        [[1343.5874,  506.6333],
         [1333.4724,  503.1437],
         [1354.4913,  518.6820],
         [1343.8105,  512.3295],
         [1325.4922,  502.8524],
         [1311.1941,  491.5528]],
        [[1344.1282,  507.0323],
         [1335.2819,  504.7194],
         [1354.2219,  519.3837],
         [1345.6777,  513.9740],
         [1327.3392,  504.4973],
         [1313.0592,  493.2108]],
        [[1344.7164,  507.4586],
         [1337.1171,  506.3545],
         [1353.9397,  520.0057],
         [1347.5576,  515.6651],
         [1329.1970,  506.1786],
         [1314.9360,  494.9086]],
        [[1345.3412,  507.9136],
         [1338.9690,  508.0282],
         [1353.6240,  520.5609],
         [1349.4460,  517.3848],
         [1331.0604,  507.8829],
         [1316.8198,  496.6302]],
        [[1345.9941,  508.3988],
         [1340.8337,  509.7301],
         [1353.2733,  521.0743],
         [1351.3413,  519.1247],
         [1332.9288,  509.6046],
         [1318.7096,  498.3692]],
        [[1346.6692,  508.9133],
         [1342.7103,  511.4547],
         [1352.8832,  521.5580],
         [1353.2443,  520.8816],
         [1334.8035,  511.3415],
         [1320.6063,  500.1230]],
        [[1347.3616,  509.4547],
         [1344.5990,  513.1993],
         [1352.4500,  522.0179],
         [1355.1562,  522.6539],
         [1336.6857,  513.0928],
         [1322.5114,  501.8910]],
        [[1348.0681,  510.0204],
         [1346.5000,  514.9622],
         [1351.9677,  522.4542],
         [1357.0779,  524.4412],
         [1338.5767,  514.8582],
         [1324.4258,  503.6729]],
        [[1348.7865,  510.6075],
         [1348.4135,  516.7422],
         [1351.4271,  522.8652],
         [1359.0100,  526.2430],
         [1340.4773,  516.6375],
         [1326.3502,  505.4684]]])

distance = []
for a, b in zip(a[:, :], a[1:, :]):
    dist = torch.pairwise_distance(a, b)
    dist = dist.detach().numpy()
    dist = dist.reshape(1, -1)
    distance.append(dist)

distance = np.concatenate(distance, axis=0)

distance = torch.from_numpy(distance).type(torch.float)
print(distance)
speed = distance
speed = torch.sigmoid(speed)
print(speed)
#column = speed.size(1)
#for i in range(0, column):
#    print(torch.mean(speed[:, i]))

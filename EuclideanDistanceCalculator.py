import torch
import numpy as np
import math
import torch.nn as nn

def sigmoid(x):
    return 1 / (1 + math.exp(-x))

m = nn.Sigmoid()

a = torch.tensor([[[-0.6655, -6.7570],
         [-0.6811,  2.5457],
         [-0.5664,  3.1458],
         [ 1.3869,  3.0682],
         [ 2.8211, -5.3116],
         [ 3.4446, -5.5169]],

        [[-0.5766, -6.7869],
         [-0.7080,  2.4115],
         [-0.5562,  3.0071],
         [ 1.2346,  2.9673],
         [ 2.7300, -4.9351],
         [ 3.3030, -5.1461]],

        [[-0.4348, -6.8121],
         [-0.7893,  2.2318],
         [-0.5752,  2.8161],
         [ 0.9852,  2.8775],
         [ 2.6179, -4.5562],
         [ 3.1373, -4.7773]],

        [[-0.2207, -6.8424],
         [-0.9307,  2.0180],
         [-0.6357,  2.5718],
         [ 0.6414,  2.8180],
         [ 2.4875, -4.1828],
         [ 2.9459, -4.4171]],

        [[ 0.0743, -6.8826],
         [-1.1187,  1.7958],
         [-0.7356,  2.2904],
         [ 0.2377,  2.7876],
         [ 2.3348, -3.8176],
         [ 2.7258, -4.0626]],

        [[ 0.4002, -6.9221],
         [-1.3362,  1.5793],
         [-0.8534,  1.9963],
         [-0.1708,  2.7754],
         [ 2.1564, -3.4610],
         [ 2.4842, -3.7280]],

        [[ 0.7366, -6.9568],
         [-1.5763,  1.3700],
         [-0.9730,  1.6965],
         [-0.5691,  2.7748],
         [ 1.9508, -3.1117],
         [ 2.2294, -3.4019]],

        [[ 1.0810, -6.9888],
         [-1.8378,  1.1652],
         [-1.0850,  1.3901],
         [-0.9625,  2.7777],
         [ 1.7223, -2.7711],
         [ 1.9708, -3.0823]],

        [[ 1.4335, -7.0204],
         [-2.1109,  0.9664],
         [-1.1841,  1.0764],
         [-1.3543,  2.7788],
         [ 1.4815, -2.4441],
         [ 1.7145, -2.7647]],

        [[ 1.7941, -7.0534],
         [-2.3881,  0.7717],
         [-1.2672,  0.7550],
         [-1.7449,  2.7781],
         [ 1.2363, -2.1165],
         [ 1.4635, -2.4427]],

        [[ 2.1613, -7.0880],
         [-2.6672,  0.5776],
         [-1.3328,  0.4259],
         [-2.1338,  2.7774],
         [ 0.9933, -1.7899],
         [ 1.2192, -2.1149]],

        [[ 2.5338, -7.1242],
         [-2.9471,  0.3827],
         [-1.3797,  0.0889],
         [-2.5212,  2.7780],
         [ 0.7553, -1.4587],
         [ 0.9825, -1.7831]]])

distance = []
for a, b in zip(a[:, :], a[1:, :]):
    dist = torch.pairwise_distance(a, b)
    dist = dist.detach().numpy()
    dist = dist.reshape(1, -1)
    distance.append(dist)

distance = np.concatenate(distance, axis=0)
#print(distance)

distance = torch.from_numpy(distance).type(torch.float)
speed = distance / 0.4
print(torch.sigmoid(speed))



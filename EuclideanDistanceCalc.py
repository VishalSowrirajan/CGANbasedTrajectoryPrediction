import torch
import numpy as np
import math

def sigmoid(x):
    return 1 / (1 + math.exp(-x))

a = torch.tensor([[[226.8808,  85.6839],
         [165.9418,  78.4275],
         [196.9717,  83.8634],
         [233.4980,  90.1816],
         [203.6119,  81.0086],
         [128.1566,  73.8572],
         [216.4667,  93.5581],
         [164.3647,  82.7420],
         [212.5336,  94.3038]],

        [[213.1074,  83.2218],
         [149.5589,  75.2088],
         [180.5699,  81.4740],
         [226.5302,  88.6168],
         [186.9325,  78.3251],
         [111.6722,  70.6163],
         [212.4453,  99.8589],
         [149.6180,  80.0282],
         [225.1109,  98.2161]],

        [[199.7963,  80.8942],
         [131.8828,  71.4133],
         [162.4783,  78.2303],
         [219.6730,  87.1511],
         [168.7875,  74.9657],
         [ 94.1701,  66.8436],
         [206.7327, 108.1002],
         [132.6807,  76.4937],
         [242.3793, 102.8137]],

        [[185.2858,  78.2648],
         [113.8272,  67.4404],
         [143.8709,  74.5121],
         [212.7733,  85.6648],
         [150.2427,  71.2571],
         [ 76.4403,  62.9129],
         [200.9035, 117.4915],
         [115.3096,  72.5666],
         [261.7216, 107.2803]],

        [[172.5137,  76.1719],
         [ 95.5543,  63.4085],
         [125.0832,  70.5708],
         [205.7633,  84.1436],
         [131.4886,  67.3788],
         [ 58.6159,  58.9374],
         [195.2871, 127.7890],
         [ 98.0565,  68.3921],
         [282.0125, 111.5832]],

        [[159.1009,  73.9836],
         [ 77.1679,  59.3568],
         [106.1615,  66.5177],
         [198.7361,  82.6204],
         [112.5870,  63.4022],
         [ 40.7386,  54.9507],
         [189.7823, 138.6678],
         [ 81.0139,  64.0592],
         [302.8711, 115.7853]]])

distance = []
for a, b in zip(a[:, :], a[1:, :]):
    dist = torch.pairwise_distance(a, b)
    dist = dist.detach().numpy()
    dist = dist.reshape(1, -1)
    distance.append(dist)

distance = np.concatenate(distance, axis=0)
#print(distance)

distance = torch.from_numpy(distance).type(torch.float)
speed = distance/0.5
speed = speed/144.60
print(speed)
column = speed.size(1)
for i in range(0, column):
    print(torch.mean(speed[:, i]))
